{
  "total_questions": 25,
  "questions": [
    {
      "question_number": 1,
      "question_text": "以下关于边界值测试法的叙述中，不正确的是（   ）",
      "options": [
        "A. 错误更容易发生在输入输出边界上而不是输入输出范围的内部",
        "B. 边界值分析法仅需考虑输入域边界，不用考虑输出域边界",
        "C. 测试数据应尽可能选取边界上的值",
        "D. 边界值分析法是对等价类划分方法的补充"
      ],
      "correct_answer": "边界值分析法仅需考虑输入域边界，不用考虑输出域边界",
      "has_image": false
    },
    {
      "question_number": 2,
      "question_text": "一个程序的控制流图中有 6 个节点，10 条边，在测试用例数最少的情况下，确保程序中每个可执行语句至少执行一次所需要的测试用例数的上限是（   ）",
      "options": [
        "A. 2",
        "B. 6",
        "C. 8",
        "D. 4"
      ],
      "correct_answer": "6",
      "has_image": false
    },
    {
      "question_number": 3,
      "question_text": "在计算机系统中，系统的（   ）可以用 MTTF/（1+MTTF）来度量，其中 MTTF 为平均无故障时间。",
      "options": [
        "A. 可维护性",
        "B. 可靠性",
        "C. 可用性",
        "D. 健壮性"
      ],
      "correct_answer": "可靠性",
      "has_image": false
    },
    {
      "question_number": 4,
      "question_text": "以下关于等价划分法的叙述中不正确的是（   ）",
      "options": [
        "A. 如果规定输入值 int3 为质数，那么得到两个等价类，即有效等价类 {int3 int3 是质数}，那么无效等价类 {int3 int3 不是质数}",
        "B. 如果规定输入值 int2 取值范围为 - 10~9 那么得到的两个等价类，即有效等价类 {int2 -10<=int2<=9} 无效等价价{int2 int2<-10 或者 > 9}",
        "C. 如果规定输入值 string1 必须是 / 0 结束，那么得到两个等价类，即有效等价类 {string1 string1 以 / 0 结束} 无效等价类{string1 string1 不以 / 0 结束}",
        "D. 如果规定输入值 int1 取值为 1，-1 两个数之一，那么得到 3 个等价类，即有效等价类 {int1 int1=1}/{int1 int1=-1 } 无效等类价类{int1 int1 不等于 1,-1}"
      ],
      "correct_answer": "如果规定输入值 int2 取值范围为 - 10~9 那么得到的两个等价类，即有效等价类 {int2 -10<=int2<=9} 无效等价价{int2 int2<-10 或者 > 9}",
      "has_image": false
    },
    {
      "question_number": 5,
      "question_text": "软件测试的对象不包括（   ）",
      "options": [
        "A. 相关数据",
        "B. 软件代码",
        "C. 软件文档",
        "D. 质量保证方法"
      ],
      "correct_answer": "质量保证方法",
      "has_image": false
    },
    {
      "question_number": 6,
      "question_text": "安全日志是软件产品的一种被动防范措施，是系统重要的安全功能，因此安全日志测试是软件系统安全性测试的重要内容，下列不属于安全日志测试基本测试内容的是（   ）",
      "options": [
        "A. 对于大型应用软件系统，测试系统是否提供安全日志的统计分析能力",
        "B. 对安全日志的完整性进行测试，测试安全日志中是否记录包括用户登录名称、时间、地址、数据操作行为以及退出时间等全部内容",
        "C. 对日志信息的保密性进行测试：测试安全日志中的曰志信息是否加密存储，加密强度是否充分",
        "D. 对安全日志的正确性进行测试，测试安全日志中记录的用户登录、数据操作等日志信息是否正确"
      ],
      "correct_answer": "对于大型应用软件系统，测试系统是否提供安全日志的统计分析能力",
      "has_image": false
    },
    {
      "question_number": 7,
      "question_text": "以下关于文档测试的说法中，不正确的是（   ）",
      "options": [
        "A. 文档测试需要检查标记是否正确性",
        "B. 文档测试需要仔细阅读文档，检查每个图形",
        "C. 文档测试需要确保大部分示例经过测试",
        "D. 文档测试需要检查文档内容是否正确和完善"
      ],
      "correct_answer": "文档测试需要确保大部分示例经过测试",
      "has_image": false
    },
    {
      "question_number": 8,
      "question_text": "对于逻辑表达式（(a||(b&c))||(c&&d)）需要（   ）个测试用例才能完成条件组合覆盖。",
      "options": [
        "A. 16",
        "B. 32",
        "C. 8",
        "D. 4"
      ],
      "correct_answer": "16",
      "has_image": false
    },
    {
      "question_number": 9,
      "question_text": "计算以下控制流程图的环路复杂度 V（G）, 正确答案是（   ）",
      "options": [
        "A. V（G）=2",
        "B. V（G）=4",
        "C. V（G）=9",
        "D. V（G）=11"
      ],
      "correct_answer": "V（G）=4",
      "has_image": true,
      "image_src": "images/image_008.jpeg",
      "image_alt": "控制流程图"
    },
    {
      "question_number": 10,
      "question_text": "以下不属于系统测试范畴的是（   ）。",
      "options": [
        "A. 性能测试",
        "B. 安全测试",
        "C. 单元测试",
        "D. 强度测试"
      ],
      "correct_answer": "单元测试",
      "has_image": false
    },
    {
      "question_number": 11,
      "question_text": "以下属于测试停止依据的是（   ）\n①测试用例全部执行结束    ②测试覆盖率达到要求\n③测试超出了预定时间      ④查出了预定数目的故障\n⑤执行了预定的测试方案    ⑥测试时间不足",
      "options": [
      "A. ①②③④⑤⑥",
      "B. ①②③",
      "C. ①②③④",
      "D. ①②③④⑤"
      ],
      "correct_answer": "①②③④⑤",
      "has_image": false
    },
    {
      "question_number": 12,
      "question_text": "以下关于性能测试的叙述中，不正确的是（   ）",
      "options": [
        "A. 性能测试通常通过工具来模拟大量用户操作，增加系统负载",
        "B. 性能测试类型包括负载测试、强度测试、容量测试等",
        "C. 性能测试的目的是为了验证软件系统是否能够达到用户提出的性能指标",
        "D. 性能测试不用于发现软件系统中存在的性能瓶颈"
      ],
      "correct_answer": "性能测试不用于发现软件系统中存在的性能瓶颈",
      "has_image": false
    },
    {
      "question_number": 13,
      "question_text": "兼容性测试不包括（   ）",
      "options": [
        "A. 数据兼容性测试",
        "B. 操作人员兼容性测试",
        "C. 软件兼容性测试",
        "D. 硬件兼容性测试"
      ],
      "correct_answer": "操作人员兼容性测试",
      "has_image": false
    },
    {
      "question_number": 14,
      "question_text": "以下关于回归测试的叙述中，不正确的是（   ）",
      "options": [
        "A. 回归测试是为了确保改动不会带来不可预料的后果或错误",
        "B. 回归测试需要针对修改过的软件成分进行测试",
        "C. 回归测试不容易实现自动化",
        "D. 回归测试需要能够测试软件的所有功能的代表性测试用例"
      ],
      "correct_answer": "回归测试不容易实现自动化",
      "has_image": false
    },
    {
      "question_number": 15,
      "question_text": "以下关于测试时机的叙述中，正确的是（   ）\n①应该尽可能早地进行测试\n②软件中的错误暴露得越迟，则修复和改正错误所花费的代价就越高\n③应该在代码编写完成后开始测试\n④项目需求分析和设计阶段不需要测试人员参与",
      "options": [
      "A. ①②③",
      "B. ①",
      "C. ①②",
      "D. ①②③④"
      ],
      "correct_answer": "①②",
      "has_image": false
    },
    {
      "question_number": 16,
      "question_text": "修改现有软件系统的设计文档和代码以增强可读性，这种行为属于（   ）维护",
      "options": [
        "A. 完善性",
        "B. 预防性",
        "C. 适应性",
        "D. 正确性"
      ],
      "correct_answer": "完善性",
      "has_image": false
    },
    {
      "question_number": 17,
      "question_text": "根据输出对输入的依赖关系设计测试用例的黑盒测试方法是（   ）",
      "options": [
        "A. 等价类划分法",
        "B. 边界值分析法",
        "C. 场景法",
        "D. 因果图法"
      ],
      "correct_answer": "因果图法",
      "has_image": false
    },
    {
      "question_number": 18,
      "question_text": "测试执行过程的阶段不包括（   ）",
      "options": [
        "A. 初测期",
        "B. 回归测试期",
        "C. 系统测试期",
        "D. 细测期"
      ],
      "correct_answer": "系统测试期",
      "has_image": false
    },
    {
      "question_number": 19,
      "question_text": "以下关于测试方法的叙述中，不正确的是（   ）",
      "options": [
        "A. 动态测试不需要实际执行程序",
        "B. 根据被测代码是否可见分为白盒测试和黑盒测试",
        "C. 静态测试主要是对软件的编程格式和结构等方面进行评估",
        "D. 黑盒测试一般用来确认软件功能的正确性和可操作性"
      ],
      "correct_answer": "动态测试不需要实际执行程序",
      "has_image": false
    },
    {
      "question_number": 20,
      "question_text": "某软件公司在招聘软件测试工程师时，应聘者甲向公司做如下保证：\n（1）经过自己测试的软件今后不会再出现问题\n（2）在工作中对所有程序员一视同仁，不会因为某个程序编写的程序发现的问题多，就重点审查该程序，以免不利于团结\n（3）承诺不需要其他人员，自己就可以独立进行测试工作\n（4）发扬咬定青山不放松的精神，不把所有问题都找出来，绝不罢休\n根据自己所学的软件测试知识，应聘者甲的保证（   ）",
      "options": [
      "A. （2）是正确的",
      "B. （4）是正确的",
      "C. 都是错误的",
      "D. （3）（4）是正确的"
      ],
      "correct_answer": "都是错误的",
      "has_image": false
    },
    {
      "question_number": 21,
      "question_text": "测试用例的三要素不包括（   ）",
      "options": [
        "A. 输入",
        "B. 预期输出",
        "C. 实际输出",
        "D. 执行条件"
      ],
      "correct_answer": "实际输出",
      "has_image": false
    },
    {
      "question_number": 22,
      "question_text": "以下关于白盒测试的叙述中，不正确的是（   ）",
      "options": [
        "A. 满足判定条件覆盖一定满足条件覆盖",
        "B. 满足条件组合覆盖一定满足判定条件覆盖",
        "C. 满足判定覆盖一定满足语句覆盖",
        "D. 满足条件覆盖一定满足判定覆盖"
      ],
      "correct_answer": "满足条件覆盖一定满足判定覆盖",
      "has_image": false
    },
    {
      "question_number": 23,
      "question_text": "针对以下 C 语言程序段，假设 sta[10]= -1，对于 x 的取值，需要（   ）个测试用例能够满足分支覆盖的要求。\n\nInt MathMine(int x)\n{\n    int m = 0;\n    int i ;\n    for(i = x – 1 ; i <= x + 1; i++)\n    {\n        If (i < 0)     continue;\n        If (i> 31)     break;\n        If (sta[i] == -1)     m++;\n    }\n    return m;\n}",
      "options": [
      "A. 6",
      "B. 3",
      "C. 5",
      "D. 4"
      ],
      "correct_answer": "3",
      "has_image": false
    },
    {
      "question_number": 24,
      "question_text": "以下属于软件测试工具的是（   ）\n①JTest          ②LoadRunner\n③Visual Studio   ④JBuilder",
      "options": [
      "A. ①",
      "B. ①②③④",
      "C. ①②",
      "D. ①②③"
      ],
      "correct_answer": "①②",
      "has_image": false
    },
    {
      "question_number": 25,
      "question_text": "以下关于软件测试原则的叙述中，正确的是（   ）\n①测试开始得越早，越有利于发现缺陷\n②测试覆盖率和测试用例数量成正比\n③测试用例既需选用合理的输入数据，又需要选择不合理的输入数据\n④应制定测试计划并严格执行，排除随意性\n⑤采用合适的测试方法，可以做到穷举测试\n⑥程序员应尽量测试自己的程序",
      "options": [
      "A. ①②③④⑤",
      "B. ①②③④",
      "C. ①②③④⑤⑥",
      "D. ①③④"
      ],
      "correct_answer": "①③④",
      "has_image": false
    }
  ]
}